Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro  
      ImageId: ami-03ca36368dbc9cfa1   
      IamInstanceProfile: !Ref EC2InstanceProfile
      SecurityGroups:
        - !Ref MySecurityGroup
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          dnf install docker -y
          systemctl start docker
          usermod -a -G docker ec2-user

          $(aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 897729109985.dkr.ecr.eu-west-1.amazonaws.com)
          docker pull 897729109985.dkr.ecr.eu-west-1.amazonaws.com/alex_it_infra_project:latest
          docker run -d -p 8080:8080 897729109985.dkr.ecr.eu-west-1.amazonaws.com/alex_it_infra_project:latest


  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: 
        - !Ref ECRAccessRole

  ECRAccessRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECRAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:GetAuthorizationToken
                Resource: "*"
